const m="https://nomanssky.fandom.com/api.php",u=e=>{const i=new URLSearchParams;return Object.entries(e).forEach((([e,s])=>{i.append(e,s.toString())})),`${m}?${i.toString()}`},l={format:"json",origin:"*"},y=(e,i,s)=>{const n={...l,action:"cargoquery",tables:"Bases",fields:["Name","CensusPlayer","CensusReddit","CensusDiscord","CensusFriend","System","Platform","Mode","CensusArrival","CensusRenewal","Builderlink"].join(","),where:`CensusShow IS NOT NULL AND Civilized='${e}'${s?` AND CensusRenewal HOLDS ${s}`:""}`,order_by:"CensusRenewal DESC",group_by:"CensusPlayer",limit:500,offset:i};return u(n)},g=async e=>{try{const i=await fetch(e);if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const s=await i.text(),n=f(s);return JSON.parse(n)}catch(e){throw console.error("API call failed:",e),e}},f=e=>e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#039;/g,"'").replace(/&amp;/g,"&"),C=e=>e.cargoquery.map((({title:e})=>({Name:e.Name,_pageName:e._pageName||e.Name,CensusPlayer:e.CensusPlayer||"Desconocido",System:e.System||"Desconocido",Platform:e.Platform||"Desconocida",Mode:e.Mode||"Desconocido",CensusArrival:e.CensusArrival||"Desconocido",CensusRenewal:e.CensusRenewal||"Desconocido",Builderlink:e.Builderlink,CensusReddit:e.CensusReddit,CensusDiscord:e.CensusDiscord,CensusFriend:e.CensusFriend,CensusVerified:e.CensusVerified}))),U=async(e,i,s)=>{const n=y(e,i,s),o=await g(n);if(null==o||!o.cargoquery)throw new Error("Invalid API response structure");return C(o)},w=async e=>{var i,s;const n={...l,action:"parse",page:e,prop:"wikitext"},o=u(n),a=await g(o),r=((null==(s=null==(i=null==a?void 0:a.parse)?void 0:i.wikitext)?void 0:s["*"])||"").match(/\|\s*image\s*=\s*(.+)/i);return r?r[1].split("\n")[0].split("|")[0].trim():null},D=async e=>{var i;e.toLowerCase().startsWith("file:")||(e="File:"+e);const s={...l,action:"query",titles:e,prop:"imageinfo",iiprop:"url"},n=u(s),o=await g(n),a=null==(i=null==o?void 0:o.query)?void 0:i.pages;if(a){const e=a[Object.keys(a)[0]];if(e&&e.imageinfo&&e.imageinfo[0]){const i=e.imageinfo[0].url;return{panel:i.split("/revision")[0],modal:i.split("revision")[0]}}}return null},v=async e=>{const i=await w(e);return i?await D(i):null},h=(e,i=0)=>{const s={...l,action:"cargoquery",tables:"Regions",fields:["Regions.Coordinates","Regions.Galaxy","Regions.Quadrant","Regions.Civilized","_pageName=Region"].join(","),where:`Civilized='${e}'`,order_by:"Region ASC",offset:i};return u(s)},R=e=>e.cargoquery.map((({title:e})=>({Coordinates:e.Coordinates||"Desconocido",Galaxy:e.Galaxy||"Desconocido",Quadrant:e.Quadrant||"Desconocido",Civilized:e.Civilized||"Desconocido",Region:e.Region||"Desconocido"}))),x=async(e,i=0)=>{const s=h(e,i),n=await g(s);if(null==n||!n.cargoquery)throw new Error("Invalid API response structure");return R(n)},b=async e=>{var i,s;const n={...l,action:"parse",page:e,prop:"wikitext"},o=u(n),a=await g(o),r=((null==(s=null==(i=null==a?void 0:a.parse)?void 0:i.wikitext)?void 0:s["*"])||"").match(/\|\s*image\s*=\s*(.+)/i);return r?r[1].split("\n")[0].split("|")[0].trim():null},q=async e=>{var i;e.toLowerCase().startsWith("file:")||(e="File:"+e);const s={...l,action:"query",titles:e,prop:"imageinfo",iiprop:"url"},n=u(s),o=await g(n),a=null==(i=null==o?void 0:o.query)?void 0:i.pages;if(a){const e=a[Object.keys(a)[0]];if(e&&e.imageinfo&&e.imageinfo[0]){const i=e.imageinfo[0].url;return{panel:i.split("/revision")[0],modal:i.split("revision")[0]}}}return null},N=async e=>{const i=await b(e);return i?await q(i):null};export{v as a,x as b,N as c,U as f};
