const m=/^\s*([^=|{}[\]]*)=/,h=/\|/m,a=/}}/m,u=/(\[\[|\{\{)/m;function f(e){const d=RegExp(/^(\{\{|\[\[)(.*)/).exec(e);if(!d)return 0;let c=d[1].length;e=e.slice(c);let l;d[1]==="{{"?l=/\}\}/m:d[1]==="[["&&(l=/\]\]/m);let i=RegExp(u).exec(e),n=RegExp(l??"").exec(e);for(;i&&(!n||i.index<n.index);){e=e.slice(i.index);const g=f(e);c+=i.index+g,e=e.slice(g),i=RegExp(u).exec(e),n=RegExp(l??"").exec(e)}return c+=((n==null?void 0:n.index)??0)+((n==null?void 0:n[0].length)??0),c}function v(e,d){const c=[],l=new RegExp("(\\{\\{\\s*"+d+"\\s*(\\||\\}\\}))","im");let i=RegExp(l).exec(e);for(;i;){const n={};let g=1;if(e=e.slice(i.index+i[1].length),e.startsWith(`
`)&&(e=e.slice(1)),i[2]==="}}"){c.push(n),i=RegExp(l).exec(e);continue}let o=null,x="",E=!1;for(;!E;){const r=RegExp(m).exec(e),s=RegExp(u).exec(e),p=RegExp(h).exec(e),t=RegExp(a).exec(e);if(x===""&&r)o=r[1].trim(),e=e.slice(r[0].length);else if(p&&(!s||p.index<s.index)&&(!t||p.index<t.index))x+=e.slice(0,p.index),e=e.slice(p.index+1),(x!==""||o)&&(n[o??g]=x.trim()),g++,o=null,x="";else if(s&&(!t||s.index<t.index)){const R=f(e.slice(s.index));x+=e.slice(0,s.index+R),e=e.slice(s.index+R)}else t&&(x+=e.slice(0,t.index),e=e.slice(t.index+2),(x!==""||o)&&(n[o??g]=x.trim()),c.push(n)),E=!0}i=RegExp(l).exec(e)}return c}export{v as w};
